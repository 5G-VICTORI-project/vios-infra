- name: Install APT Transport HTTPS
  apt:
    name: apt-transport-https
    state: present

- name: Disable swap
  shell: |
         sudo swapoff -a
         sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

- name: Set system configurations for Kubernetes networking
  file:
   path: "/etc/sysctl.d/kubernetes.conf"
   state: "touch"

- name: Update sysctl settings for Kubernetes networking
  blockinfile:
   path: "/etc/sysctl.d/kubernetes.conf"
   block: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1

- name: Apply new sysctl settings
  command: sudo sysctl --system

- name: Install k8s APT repo GPG key
  apt_key:
    url: "{{ k8s_url_apt_key }}"
    state: present

- name: Setup k8s APT repo
  apt_repository:
    repo: "{{ k8s_repository }}"
    state: present

- name: Install Kubernetes binaries
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet
      - kubeadm
      - kubectl

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted

- name: Initialize the cluster
  become: yes
  shell: "kubeadm init --pod-network-cidr={{ cluster_pod_subnet_cidr }} >> cluster.txt"
  args:
    chdir: $HOME
    creates: cluster.txt

- name: Create .kube directory
  become: yes
  become_user: "{{ cluster_ssh_user }}"
  file:
    path: $HOME/.kube
    state: directory
    mode: 0755

- name: Copies admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: $HOME/.kube/config
    remote_src: yes
    owner: kube

- name: Install Pod network
  become: yes
  become_user: "{{ cluster_ssh_user }}"
  shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml >> pod_setup.txt
  args:
    chdir: $HOME
    creates: pod_setup.txt

- name: Get the token for joining the worker nodes
  become: yes
  become_user: "{{ cluster_ssh_user }}"
  shell: kubeadm token create  --print-join-command
  register: kubernetes_join_command

#- debug:
#  msg: "{{ kubernetes_join_command.stdout }}"

- name: Copy join command to local file.
  become: yes
  local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777



