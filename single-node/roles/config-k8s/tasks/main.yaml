- name: Set system configurations for kubernetes networking
  file:
   path: "/etc/sysctl.d/kubernetes.conf"
   state: "touch"

- name: Update sysctl settings for kubernetes networking
  blockinfile:
   path: "/etc/sysctl.d/kubernetes.conf"
   block: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1

- name: Apply new sysctl settings
  command: sudo sysctl --system

- name: Install kubernetes APT repo GPG key
  apt_key:
    url: "{{ k8s_url_apt_key }}"
    state: present

- name: Setup kubernetes APT repo
  apt_repository:
    repo: "{{ k8s_repository }}"
    state: present

- name: Install kubernetes packages
  shell: |
         sudo apt-get update
         sudo apt-get install -y kubelet="{{ kubernetes_ubuntu_version }}" kubeadm="{{ kubernetes_ubuntu_version }}" kubectl="{{ kubernetes_ubuntu_version }}"
         sudo apt-mark hold kubelet kubeadm kubectl

- name: Initialize the cluster
  become: yes
  shell: "kubeadm init --pod-network-cidr={{ cluster_pod_subnet_cidr }} >> cluster.txt"
  args:
    chdir: $HOME
    creates: cluster.txt

- name: Create .kube directory
  become: yes
  become_user: "{{ cluster_ssh_user }}"
  file:
    path: $HOME/.kube
    state: directory
    mode: 0755

- name: Copies admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    remote_src: yes
    owner: "{{ cluster_ssh_user }}"

- name: Install Pod network
  become: yes
  become_user: "{{ cluster_ssh_user }}"
  shell: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml >> pod_setup.txt
  args:
    chdir: $HOME
    creates: pod_setup.txt

- name: Get the token for joining the worker nodes
  become: yes
  become_user: "{{ cluster_ssh_user }}"
  shell: kubeadm token create --print-join-command
  register: kubernetes_join_command

- name: Copy join command to local file.
  become: yes
  local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/home/ubuntu/kubernetes_join_command" mode=0777

- name: Copy default storage class configuration
  template:
    src: "{{ role_path }}/templates/default-storage-class.yaml.j2"
    dest: /home/ubuntu/manifests/default-storage-class.yaml

- name: Apply default storage class
  command: kubectl apply -f /home/ubuntu/manifests/default-storage-class.yaml

